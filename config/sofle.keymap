/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE   &kp N1  &kp N2     &kp N3            &kp N4        &kp N5                           &kp N6  &kp N7  &kp N8     &kp N9             &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W      &kp E             &kp R         &kp T                            &kp Y   &kp U   &kp I      &kp O              &kp P     &kp BSLH
&kp LSHIFT  &kp A   &kp S      &kp D             &kp F         &kp G                            &kp H   &kp J   &kp K      &kp L              &kp SEMI  &kp ENTER
&kp LCTRL   &kp Z   &kp X      &kp C             &kp V         &kp B   &kp C_MUTE    &none      &kp N   &kp M   &kp COMMA  &kp DOT            &kp FSLH  &kp RSHFT
                    &kp LCTRL  &kp LEFT_COMMAND  &kp LEFT_ALT  &mo 1   &kp SPACE     &kp SPACE  &mo 2   &mo 3   &kp RALT   &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        bt_navkeys {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |       |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                |  <-  |   v  |   ^   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp ESCAPE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans          &kp PRINTSCREEN  &kp INS    &kp HOME  &kp PAGE_UP
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans          &kp UP_ARROW     &kp DEL    &kp END   &kp PAGE_DOWN
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT  &trans    &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans          &trans           &trans     &trans    &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Fkeys_arrow {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6         &kp F7    &kp F8    &kp F9     &kp F10          &kp F11
&trans      &trans  &trans  &trans  &trans  &trans                    &kp PAGE_UP    &kp HOME  &kp UP    &kp END    &kp PRINTSCREEN  &kp F12
&trans      &trans  &trans  &trans  &trans  &trans                    &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans           &trans
&trans      &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans    &trans    &trans     &trans           &trans
                    &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        right_altern {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &kp MINUS  &kp EQUAL  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &kp LBKT   &kp RBKT   &kp INSERT
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans     &kp APOS   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans     &trans     &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
